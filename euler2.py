num = "73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966489504452445231617318564030987111217223831136222989342338030813533627661428280644448664523874930358907296290491560440772390713810515859307960866701724271218839987979087922749219016997208880937766572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397536978179778461740649551492908625693219784686224828397224137565705605749026140797296865241453510047482166370484403199890008895243450658541227588666881164271714799244429282308634656748139191231628245861786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408071984038509624554443629812309878799272442849091888458015616609791913387549920052406368991256071760605886116467109405077541002256983155200055935729725716362695618826704282524836008232575304207529634"
#list of numbers being defined as num

def biggest_product(num, length):
    #creating function called biggest_product
    current = 0
    #biggest_product=0 to start
    for i in xrange(0, len(num) - length):
        #for i in the rance of 0 to the num - 13, setting loop to find numbers with 13 integers
        length = 13
        #setting length as 13
        product = 1
        # setting product as 1
        part = num[i:i+length]
        #part is equal to a 13 digit number in num
        for char in part:
        #setting another loop
            product *= int(char)
            #product is eual to all integers multiplied in part
        if product > current:
            #loop requireing product to be greater than current
            current = product
            #if prouct is greater than current, then set current as product
    return current
    #change current from 0 to the larget number found

print biggest_product(num, 13)
#prints the answer
